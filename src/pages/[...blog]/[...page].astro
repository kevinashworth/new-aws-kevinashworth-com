---
// Generic blog list page
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";

import Layout from "~/layouts/PageLayout.astro";
import BlogList from "~/components/blog/List.astro";
import Headline from "~/components/blog/Headline.astro";
import Pagination from "~/components/blog/Pagination.astro";
import PostTags from "~/components/blog/Tags.astro";
import Rubric from "~/components/blog/Rubric.astro";

import { blogListRobots, getStaticPathsBlogList, findCategories, findTags } from "~/utils/blog";

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogList({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const currentPage = page.currentPage ?? 1;

const allCategories = await findCategories();
const allTags = await findTags();

const metadata = {
  title: `Blog${currentPage > 1 ? ` — Page ${currentPage}` : ""}`,
  robots: {
    index: blogListRobots?.index && currentPage === 1,
    follow: blogListRobots?.follow,
  },
  openGraph: {
    type: "blog",
  },
};

const rubric = "Blog Posts" + (currentPage > 1 ? ` — Page ${currentPage}` : "");
const headline = "Bloggie Blog";
---

<Layout metadata={metadata}>
  <section class="mx-auto max-w-4xl px-4 py-6 md:px-6">
    <Rubric rubric={rubric} headline={headline} />
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />

    <PostTags tags={allCategories} class="mb-2" title="Search by Categories:" isCategory />
    <PostTags tags={allTags} title="Search by Tags:" />
  </section>
</Layout>
