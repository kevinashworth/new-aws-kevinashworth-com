---
// Category page
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";
import { blogCategoryRobots, getStaticPathsBlogCategory } from "~/utils/blog";

import Layout from "~/layouts/PageLayout.astro";
import BlogList from "~/components/blog/List.astro";
import Pagination from "~/components/blog/Pagination.astro";
import Rubric from "~/components/blog/Rubric.astro";

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogCategory({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths> & { category: string };

const { page, category } = Astro.props as Props;

const currentPage = page.currentPage ?? 1;

const metadata = {
  title: `Blog posts by category — ${category} ${currentPage > 1 ? ` — page ${currentPage}` : ""}`,
  robots: {
    index: blogCategoryRobots?.index,
    follow: blogCategoryRobots?.follow,
  },
};

// Currently, I only have two categories: "Acting" and "Blog", and it's lowercased by the time it gets here.
let categoryString = category.replaceAll("-", " ");
switch (category) {
  case "acting":
    categoryString = "Acting Updates";
    break;
  case "blog":
    categoryString = "Blog Posts";
    break;
  default:
    break;
}

const rubric = "Blog Posts by Category";
const headline = categoryString;
---

<Layout metadata={metadata} disablePagefind={true}>
  <section class="mx-auto max-w-4xl px-4 py-6 md:px-6">
    <Rubric rubric={rubric} headline={headline} />
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
