---
import type { ImageMetadata } from "astro";
import { Icon } from "astro-icon/components";
import Image from "~/components/common/Image.astro";
import PostTags from "~/components/blog/Tags.astro";

import { APP_BLOG } from "~/utils/config";
import type { Post } from "~/types";

import { getPermalink } from "~/utils/permalinks";
import { findImage } from "~/utils/images";
import { getFormattedDate } from "~/utils/utils";

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = (await findImage(post.image)) as ImageMetadata | undefined;

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, "post") : "";

const alt = post?.imageAlt || post.title;
---

<article class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${image ? "md:grid-cols-2" : ""}`}>
  {
    image && (
      <a class="group relative block" href={link ?? "javascript:void(0)"}>
        <div class="relative h-0 overflow-hidden rounded-sm pb-[56.25%] shadow-lg md:h-72 md:pb-[75%] lg:pb-[56.25%]">
          {image && (
            <Image
              src={image}
              class="absolute inset-0 mb-6 h-full w-full rounded-sm object-cover shadow-lg"
              widths={[400, 900]}
              width={900}
              sizes="(max-width: 900px) 400px, 900px"
              alt={alt}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          )}
        </div>
      </a>
    )
  }
  <div>
    <header>
      <div class="mb-1">
        <span class="text-sm">
          <time datetime={String(post.publishDate)} class="text-muted inline-block text-xs dark:text-slate-400"
            >{getFormattedDate(post.publishDate)}</time
          >
        </span>
      </div>
      <h2 class="font-heading text-xl leading-tight font-bold sm:text-2xl dark:text-slate-300">
        {
          link ? (
            <a class="hover:text-primary transition duration-200 ease-in dark:hover:text-red-700" href={link}>
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
    </header>

    {!post.excerpt && post.subtitle && <p class="text-muted grow text-lg dark:text-slate-400">{post.subtitle}</p>}
    {post.excerpt && <p class="text-muted grow text-lg dark:text-slate-400">{post.excerpt}</p>}

    <footer class="mt-5">
      <PostTags tags={post.tags} class="text-xs" />
    </footer>
  </div>
</article>
